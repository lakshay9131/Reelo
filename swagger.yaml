openapi: 3.0.0
info:
  title: Question Generator 
  description: API's for generating questions
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:

  /:
    get:
      summary: Start Page
      description: Retrieves Sample Paper.
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: "Welcome to the Grocery Booking API!"
        '500':
          description: Error retrieving items
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
                example:
                  error: "An error occurred while retrieving the sample paper."
  /api/generatePaper:
    post:
      summary: Generate a Question Paper
      description: Generate a question paper based on the total marks and difficulty distribution.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marks:
                  type: number
                  description: Total marks for the question paper. Must be a positive number.
                  example: 100
                difficulty_distribution:
                  type: object
                  description: Distribution of questions based on difficulty levels.
                  properties:
                    easy:
                      type: number
                      description: Percentage of questions that should be of easy difficulty.
                      example: 20
                    medium:
                      type: number
                      description: Percentage of questions that should be of medium difficulty.
                      example: 50
                    hard:
                      type: number
                      description: Percentage of questions that should be of hard difficulty.
                      example: 30
                  required:
                    - easy
                    - medium
                    - hard
              required:
                - marks
                - difficulty_distribution
      responses:
        '200':
          description: Successfully generated the question paper
          content:
            application/json:
              schema:
                type: object
                properties:
                  paper:
                    type: array
                    items:
                      type: object
                      properties:
                        question:
                          type: string
                          description: The text of the question.
                        subject:
                          type: string
                          description: The subject of the question.
                        topic:
                          type: string
                          description: The topic of the question.
                        difficulty:
                          type: string
                          description: The difficulty level of the question.
                        marks:
                          type: number
                          description: The marks assigned to the question.
                    example:
                      - question: "What is the speed of light?"
                        subject: "Physics"
                        topic: "Waves"
                        difficulty: "Easy"
                        marks: 5
                      - question: "Explain Newton's Second Law."
                        subject: "Physics"
                        topic: "Mechanics"
                        difficulty: "Medium"
                        marks: 10
        '400':
          description: Bad request due to invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
                example:
                  error1: "Invalid difficulty level: easy"
                  error2: "Invalid marks. Marks should be a positive number."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating an internal server issue.
                example:
                  error: "An unexpected error occurred while generating the question paper."
  /api/allquestions:
      get:
        summary: Start Page
        description: Retrieves Sample Paper.
        responses:
          '200':
            description: Successful operation
            content:
              text/plain:
                schema:
                  type: string
                  example: "Welcome to the Grocery Booking API!"
          '500':
            description: Error retrieving items
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error message indicating what went wrong.
                  example:
                    error: "An error occurred while retrieving the sample paper."

security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
